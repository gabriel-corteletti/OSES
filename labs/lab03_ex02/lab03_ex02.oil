OIL_VERSION = "2.5";


IMPLEMENTATION trampoline {
	//Fix the default STACKSIZE of tasks
	TASK {
    UINT32 STACKSIZE = 256;
	};
};


CPU RM_scheduler {
  OS config {
    STATUS = STANDARD;
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../..";
      APP_NAME = "lab03_ex02_exe";
      APP_SRC = "lab03_ex02.cpp";
      CPPCOMPILER = "avr-g++";
      COMPILER = "avr-gcc";
      LINKER = "avr-gcc";
      ASSEMBLER = "avr-gcc";
      COPIER = "avr-objcopy";
      SYSTEM = PYTHON;
      LIBRARY = serial;
    };
    SYSTEM_CALL = TRUE;
  };
 
  APPMODE stdAppmode {};
  

    /************* ALARMS DEFINITION *************/

    ALARM alarmA {              //every 1200ms
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK { TASK = TaskA; };
        AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 1172; CYCLETIME = 1172; };
    };
  
    ALARM alarmB {              //every 2000ms
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK { TASK = TaskB; };
        AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 1954; CYCLETIME = 1954; };
    };

    ALARM alarmC {               //every 3000ms
        COUNTER = SystemCounter;
        ACTION = ACTIVATETASK { TASK = TaskC; };
        AUTOSTART = TRUE { APPMODE = stdAppmode; ALARMTIME = 2930; CYCLETIME = 2930; };
    };


    /************* RESOURCE DEFINITION *************/

    RESOURCE Sem {
        RESOURCEPROPERTY = STANDARD;
    };


    /************* TASKS DEFINITION *************/

    TASK TaskA {
        PRIORITY = 3;
        AUTOSTART = TRUE { APPMODE = stdAppmode; };
        ACTIVATION = 1;
        SCHEDULE = FULL;
        RESOURCE = Sem;
    };

    TASK TaskB {
        PRIORITY = 2;
        AUTOSTART = TRUE { APPMODE = stdAppmode; };
        ACTIVATION = 1;
        SCHEDULE = FULL;
    };

    TASK TaskC {
        PRIORITY = 1;
        AUTOSTART = TRUE { APPMODE = stdAppmode; };
        ACTIVATION = 1;
        SCHEDULE = FULL;
        RESOURCE = Sem;
    };
};